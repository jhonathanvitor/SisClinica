// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisClin.Infra.Data;

namespace SisClin.Infra.Migrations
{
    [DbContext(typeof(DbSisClin))]
    [Migration("20220525135738_RemoveTipeId")]
    partial class RemoveTipeId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AttendancePeopleAttendance", b =>
                {
                    b.Property<int>("AttendancesAttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("PeoplesAttendancesAttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("PeoplesAttendancesPeopleId")
                        .HasColumnType("int");

                    b.HasKey("AttendancesAttendanceId", "PeoplesAttendancesAttendanceId", "PeoplesAttendancesPeopleId");

                    b.HasIndex("PeoplesAttendancesAttendanceId", "PeoplesAttendancesPeopleId");

                    b.ToTable("AttendancePeopleAttendance");
                });

            modelBuilder.Entity("AttendanceProcedureAttendance", b =>
                {
                    b.Property<int>("AttendancesAttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("ProceduresAttendancesAttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("ProceduresAttendancesProcedureId")
                        .HasColumnType("int");

                    b.HasKey("AttendancesAttendanceId", "ProceduresAttendancesAttendanceId", "ProceduresAttendancesProcedureId");

                    b.HasIndex("ProceduresAttendancesAttendanceId", "ProceduresAttendancesProcedureId");

                    b.ToTable("AttendanceProcedureAttendance");
                });

            modelBuilder.Entity("SisClin.Domain.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AttendanceId");

                    b.ToTable("MyProperty");
                });

            modelBuilder.Entity("SisClin.Domain.Employer", b =>
                {
                    b.Property<int>("EmployerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<float>("EmployerCpf")
                        .HasColumnType("real");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("EmployerRg")
                        .HasColumnType("real");

                    b.HasKey("EmployerId");

                    b.HasIndex("AttendanceId");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("SisClin.Domain.EmployerAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId", "EmployerId");

                    b.HasIndex("EmployerId");

                    b.ToTable("EmployersAttendances");
                });

            modelBuilder.Entity("SisClin.Domain.People", b =>
                {
                    b.Property<int>("PeopleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<string>("PeopleAndress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeopleAttendanceAttendanceId")
                        .HasColumnType("int");

                    b.Property<int?>("PeopleAttendancePeopleId")
                        .HasColumnType("int");

                    b.Property<float>("PeopleCpf")
                        .HasColumnType("real");

                    b.Property<string>("PeopleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PeopleRg")
                        .HasColumnType("real");

                    b.HasKey("PeopleId");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("PeopleAttendanceAttendanceId", "PeopleAttendancePeopleId");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("SisClin.Domain.PeopleAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId", "PeopleId");

                    b.ToTable("PeoplesAttendances");
                });

            modelBuilder.Entity("SisClin.Domain.Procedure", b =>
                {
                    b.Property<int>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedureAttendanceAttendanceId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedureAttendanceProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureDescliption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ProcedureValue")
                        .HasColumnType("real");

                    b.HasKey("ProcedureId");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("ProcedureAttendanceAttendanceId", "ProcedureAttendanceProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("SisClin.Domain.ProcedureAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId", "ProcedureId");

                    b.ToTable("ProceduresAttendances");
                });

            modelBuilder.Entity("SisClin.Domain.Tipe", b =>
                {
                    b.Property<int>("TipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("TipeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipeId");

                    b.HasIndex("EmployerId");

                    b.ToTable("Tipes");
                });

            modelBuilder.Entity("AttendancePeopleAttendance", b =>
                {
                    b.HasOne("SisClin.Domain.Attendance", null)
                        .WithMany()
                        .HasForeignKey("AttendancesAttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisClin.Domain.PeopleAttendance", null)
                        .WithMany()
                        .HasForeignKey("PeoplesAttendancesAttendanceId", "PeoplesAttendancesPeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceProcedureAttendance", b =>
                {
                    b.HasOne("SisClin.Domain.Attendance", null)
                        .WithMany()
                        .HasForeignKey("AttendancesAttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisClin.Domain.ProcedureAttendance", null)
                        .WithMany()
                        .HasForeignKey("ProceduresAttendancesAttendanceId", "ProceduresAttendancesProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SisClin.Domain.Employer", b =>
                {
                    b.HasOne("SisClin.Domain.Attendance", null)
                        .WithMany("Employers")
                        .HasForeignKey("AttendanceId");
                });

            modelBuilder.Entity("SisClin.Domain.EmployerAttendance", b =>
                {
                    b.HasOne("SisClin.Domain.Attendance", "Attendance")
                        .WithMany("EmployersAttendances")
                        .HasForeignKey("AttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisClin.Domain.Employer", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("SisClin.Domain.People", b =>
                {
                    b.HasOne("SisClin.Domain.Attendance", null)
                        .WithMany("Peoples")
                        .HasForeignKey("AttendanceId");

                    b.HasOne("SisClin.Domain.PeopleAttendance", null)
                        .WithMany("Peoples")
                        .HasForeignKey("PeopleAttendanceAttendanceId", "PeopleAttendancePeopleId");
                });

            modelBuilder.Entity("SisClin.Domain.Procedure", b =>
                {
                    b.HasOne("SisClin.Domain.Attendance", null)
                        .WithMany("Procedures")
                        .HasForeignKey("AttendanceId");

                    b.HasOne("SisClin.Domain.ProcedureAttendance", null)
                        .WithMany("procedures")
                        .HasForeignKey("ProcedureAttendanceAttendanceId", "ProcedureAttendanceProcedureId");
                });

            modelBuilder.Entity("SisClin.Domain.Tipe", b =>
                {
                    b.HasOne("SisClin.Domain.Employer", null)
                        .WithMany("Tipe")
                        .HasForeignKey("EmployerId");
                });

            modelBuilder.Entity("SisClin.Domain.Attendance", b =>
                {
                    b.Navigation("Employers");

                    b.Navigation("EmployersAttendances");

                    b.Navigation("Peoples");

                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("SisClin.Domain.Employer", b =>
                {
                    b.Navigation("Tipe");
                });

            modelBuilder.Entity("SisClin.Domain.PeopleAttendance", b =>
                {
                    b.Navigation("Peoples");
                });

            modelBuilder.Entity("SisClin.Domain.ProcedureAttendance", b =>
                {
                    b.Navigation("procedures");
                });
#pragma warning restore 612, 618
        }
    }
}
